apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
  labels:
    app.kubernetes.io/name: keda-metrics-apiserver
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.16.0
  name: keda-metrics-apiserver
spec:
  ports:
    - name: https
      port: 443
      targetPort: 6443
    - name: metrics
      port: 8080
      targetPort: 8080
  selector:
    app: keda-metrics-apiserver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: keda-metrics-apiserver
    app.kubernetes.io/name: keda-metrics-apiserver
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/version: 2.16.0
  name: keda-metrics-apiserver
  annotations:
    "app.uw.systems/description": "Kubernetes event-driven autoscaler API server."
    "app.uw.systems/tier": "tier_2"
    "app.uw.systems/repos.keda-manifests": "https://github.com/utilitywarehouse/keda-manifests/namespaced/metrics-apiserver"
    "app.uw.systems/tags.oss": "true"
    "app.uw.systems/tags.skip-repo": "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keda-metrics-apiserver
  template:
    metadata:
      labels:
        app: keda-metrics-apiserver
      name: keda-metrics-apiserver
    spec:
      containers:
        - args:
            - /usr/local/bin/keda-adapter
            - --secure-port=6443
            - --logtostderr=true
            - --stderrthreshold=ERROR
            - --v=0
            - --client-ca-file=/certs/ca.crt
            - --tls-cert-file=/certs/tls.crt
            - --tls-private-key-file=/certs/tls.key
            - --cert-dir=/certs
          env:
            - name: WATCH_NAMESPACE
              value: "TBD"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KEDA_HTTP_DEFAULT_TIMEOUT
              value: ""
            - name: KEDA_RESTRICT_SECRET_ACCESS
              value: "true"
          image: ghcr.io/kedacore/keda-metrics-apiserver:2.16.0
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 6443
              scheme: HTTPS
            initialDelaySeconds: 5
          name: keda-metrics-apiserver
          ports:
            - containerPort: 6443
              name: https
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: /readyz
              port: 6443
              scheme: HTTPS
            initialDelaySeconds: 5
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /tmp
              name: temp-vol
            - mountPath: /certs
              name: certificates
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
      serviceAccountName: keda-operator
      volumes:
        - emptyDir: {}
          name: temp-vol
        - name: certificates
          secret:
            defaultMode: 420
            secretName: keda-metrics-apiserver-cert
