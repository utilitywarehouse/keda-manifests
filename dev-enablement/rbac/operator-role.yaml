# We did the following changes to the default cluster role:
# - reduced the access to secrets to only list and watch, as we're handling the TLS assets using our own certificate manager
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: keda-operator
    app.kubernetes.io/part-of: keda-operator
  name: keda-operator
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: keda-operator
    app.kubernetes.io/part-of: keda-operator
  name: keda-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keda-operator
subjects:
  - kind: ServiceAccount
    name: keda-operator
